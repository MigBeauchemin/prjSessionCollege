<!-- ////////////////////////////////////// Table Cours //////////////////////////////////////// -->
<div class="grid-container">
    <div class="tableauListe">
        <table class="table" id="dataTableCours">

            <tr>
                <th hidden class="TableCoursHead">Id</th>
                <th hidden class="TableCoursHead">CourseId</th>
                <th class="TableCoursHead">Session</th>
                <th class="TableCoursHead">Departement</th>
                <th class="TableCoursHead">Cours</th>
                <th class="TableCoursHead">Professeur</th>
                <th hidden class="TableCoursHead">Schedule</th>
                <th hidden class="TableCoursHead">Location</th>
            </tr>

            @foreach (var cours in Model.dataCourseSemester)
            {
                <tr>
                    <td hidden class="TableCoursItem"> @cours.Id</td>
                    <td hidden class="TableCoursItem"> @cours.CourseId</td>
                    <td class="TableCoursItem">@cours.Semester</td>
                    <td class="TableCoursItem">@cours.Department</td>
                    <td class="TableCoursItem">@cours.Course</td>
                    <td class="TableCoursItem">@cours.TeacherFirstName @cours.TeacherLastName</td>
                    <td hidden class="TableCoursItem"> @cours.Schedule</td>
                    <td hidden class="TableCoursItem"> @cours.Location</td>
                </tr>
            }
        </table>
    </div>
    <div class="tableauResultat">
        <div class="titleResultat">
            <h4>Les Étudiants</h4>
        </div>
        <table class="table" id="resultTable">
            <tr>
                <th hidden>Id</th>
                <th hidden>StudentId</th>
                <th>Étudiant</th>
                <th>Note</th>
                <th>Supprimer</th>
            </tr>

            @foreach (var student in Model.dataCourseSemesterStudent)
            {
                <tr>
                    <td hidden> @student.Id</td>
                    <td hidden> @student.StudentId</td>
                    <td>@student.FirstName @student.LastName</td>
                    <td class="changerNote">@student.Grade</td>
                    <td><button class="removeStudent" data="@student.StudentId" id="boutonRemoveStudent">Retirer</button></td>
                </tr>
            }
        </table>
        <div class="titleProfs">
            <h4>Le Professeur du Cours</h4>
        </div>
        <table class="table" id="resultProf">
            <tr>
                <th hidden>Id</th>
                <th>Professeur</th>
                <th></th>
                <th>Horaire</th>
                <th>Local</th>
                 
            </tr>

        </table>
    </div>

</div>


<script>
    //SCRIPT DU TRI -- FONCTIONNE a moitié. On dirait qu'il enlève les nom de classe et les ids alors ils ne devient plus cliquable. Aussi le header tri et bouge. 
   
    // Pour trier les colonnes du tableau Cours
    $(document).ready(function () {
        let triCroissant = true;

        $('#dataTableCours').on('click', '.TableCoursHead', function () {
            const table = $('#dataTableCours');
            const columnIndex = $(this).index();

            $('.TableCoursHead').each(function () {
                $(this).text($(this).text().replace(' ↑', '').replace(' ↓', ''));
            });

            // Recherche si la colonne est déjà triée
            const rows = table.find('tbody tr').toArray();

            // Tri des lignes
            rows.sort(function (a, b) {
                const aValue = $(a).find('.TableCoursItem').eq(columnIndex).text();
                const bValue = $(b).find('.TableCoursItem').eq(columnIndex).text();
                return triCroissant ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);
            });
            // Remplace les lignes dans le tableau
            table.find('tbody').empty().append(rows);

            // Ajoute la flèche de tri
            $(this).append(triCroissant ? ' ↑' : ' ↓');

            // Change le sens du tri
            triCroissant = !triCroissant;
        });
    });
    // FIN SCRIPT DU TRI -- FONCTIONNE NE PAS CHANGER


    //<-- Script pour afficher les détails du cours -->
    // Le ajax Ne fonctionne pas

    $(document).ready(function () {
        $('#dataTableCours tbody tr').click(function () {
            $('#dataTableCours tbody tr').removeClass('selected');
            $(this).addClass('selected');

            var rowData = $(this).find('td').map(function () {
                return $(this).text();
            }).get(); 

            // Mettre à jour la table resultTable avec les données récupérées (pour les étudiants)
            var courseId = rowData[1]; // courseId est la deuxième information 
            $.ajax({
                type: "GET",
                url: "/Home/CourseSemesterStudent",
                data: { courseId: courseId },
                success: function (data) {
                    var resultTable = $('#resultTable tbody');
                    resultTable.empty();
                    data.forEach(function (student) {
                        var row = $('<tr>');
                        row.append('<td hidden>' + student.Id + '</td>');
                        row.append('<td hidden>' + student.StudentId + '</td>');
                        row.append('<td>' + student.FirstName + ' ' + student.LastName + '</td>');
                        row.append('<td class="changerNote">' + student.Grade + '</td>');
                        row.append('<td><button class="removeStudent">Retirer</button></td>');
                        resultTable.append(row);
                    });

                },
                error: function (xhr, status, error) {
                    console.error("Erreur : " + error);
                }
            });

            // Mettre à jour la table resultProf avec les informations sur le professeur
            var resultProf = $('#resultProf tbody');
            resultProf.empty();
            resultProf.append('<tr><th hidden >' + "Id" + ' </th><th>' + "Professeur" + '</th><th></th><th>' + "Horaire" + '</th><th>' + "Local" + '</th></tr>');
            resultProf.append('<tr><td hidden>' + rowData[1] + '</td><td>' + rowData[5] + '</td><td><button class="addTeacher">Modifier Professeur</button></td><td>' + rowData[6] + '</td><td>' + rowData[7] + '</td></tr>');

        });
    });



    //         $ajax({
    //         type: "GET",
    //         url: "/Home/CourseSemester",
    //         data: { courseId: courseId },
    //         success: function (data) {
    //             $("#detailsCours").html(data);
    //         },
    //         error: function (messageErreur) {
    //             alert("error : " + response.responseText);
    //         }
    //         });

    //         $ajax({
    //         type: "GET",
    //         url: "/Home/CourseSemesterStudents",
    //         data: { courseId: courseId },
    //         success: function (data) {
    //             const tbody = $("#resultTable tbody");
    //             $("#resultTable").html(data);
    //             tbody.empty();

    //             etudiantsData.forEach((etudiant) => {
    //                 const row = $("<tr>");
    //                 tr.append($("<td>${etudiant.FirstName etudiant.LastName}</td>");
    //                 tr.append($("<td><input type="text" value="${etudiant.Grade}"></td>");
    //                 tr.append($("<td><button class="removeStudent">Retirer</button></td>");

    //                 tbody.append(row);
    //             });

    //             //Retirer un étudiant du cours click
    //             $(".removeStudent").click(function () {
    //                 const clickedRow = $(this).closest("tr");
    //                 const studentId = clickedRow.find("td:first").text();

    //                 $ajax({
    //                     type: "GET",
    //                     url: "/Home/RemoveStudentFromCourse",
    //                     data: { studentId: studentId, courseId: courseId },
    //                     success: function (etudiantsData) {
    //                         const tbody = $("#grilleEtudiants tbody");
    //                         $("#selectionEtu").html(etudiantsData);
    //                         tbody.empty();

    //                         etudiantsData.forEach((etudiant) => {
    //                             const row = $("<tr>");
    //                             tr.append($("<td>${etudiant.name}</td>");
    //                             tr.append($("<td><input type="text" value="${etudiant.grade}"></td>");
    //                             tr.append($("<td><button class="removeStudent">Retirer</button></td>");

    //                             tbody.append(row);
    //                         });
    //                     },
    //                     error: function (messageErreur) {
    //                         alert("error : " + response.responseText);
    //                     }
    //                 });
    //             });
    //         },
    //         error: function (messageErreur) {
    //             alert("error : " + response.responseText);
    //         }
    //     });



    // // Code pour retirer un étudiant du cours
    // $(".removeStudent").click(function () {
    //     var clickedRow = $(this).closest("tr");
    //     var studentId = clickedRow.find("td:nth-child(2)").text(); // Récupérer l'ID de l'étudiant
    //     $.ajax({
    //         type: "GET",
    //         url: "/Home/RemoveStudentFromCourse",
    //         data: { studentId: studentId, courseId: courseId },
    //         success: function (response) {
    //             // Mettre à jour la table des étudiants après suppression
    //             // (vous pouvez ajouter le code ici pour mettre à jour la table resultTable)
    //         },
    //         error: function (xhr, status, error) {
    //             console.error("Erreur : " + error);
    //         }
    //     });
    // });

    // })

    $(".BtnNav").show();
    $("#LogoutBtn").show();
</script>




<style>
    body {
        background-image: url("/images/DeanOffice.jpg");
        background-size: cover;
        background-repeat: no-repeat;
    }

    h1 {
        color: white;
        font-size: 75px;
        font-weight: bold;
        text-shadow: 2px 2px 4px #000000;
    }

    tr:hover {
        background-color: rgba(0,0,0,0.1);
        cursor: pointer;
    }

    th {
        color: #000000;
        font-size: 20px;
        font-weight: bold;
        text-shadow: 2px 2px 4px white;
    }

    .grid-container {
        background-color: rgba(128,128,128,0.8);
        padding: 10px;
        margin: 10px auto;
        margin-bottom: 20px;
        border-radius: 10px;
        width: 70%;
        color: white;
    }

    .detailCours {
        background-color: rgba(128,128,128,0.8);
        padding: 10px;
        margin: 10px auto;
        margin-bottom: 20px;
        border-radius: 10px;
        width: 70%;
        color: white;
    }

    #Copyright {
        position: fixed;
        bottom: 0;
        right: 0;
        color: white;
        background-color: rgba(0,0,0,0.6);
        padding: 5px;
        font-size: 10px;
    }

    .formStyle {
        background-color: rgba(128,128,128,0.8);
        padding: 20px;
        border-radius: 10px;
        width: 70%;
        margin: auto;
    }

    .inputStyle {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        background-color: #fff;
        border: 2px solid rgb(0,0,0,0);
        box-sizing: border-box;
        border-radius: 4px;
        color: #000;
    }

    .buttonStyle {
        background-color: blue;
        color: #fff;
        padding: 12px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    #LogoutBtn {
        background-color: red;
        padding: 1px 2px;
        border: 2px solid rgb(0,0,0,0);
        border-radius: 4px;
        cursor: pointer;
    }

    #LogoutBtn:hover {
        background-color: rgb(124, 20, 17);
        padding: 1px 2px;
        border: 2px solid rgb(0,0,0,0);
        border-radius: 4px;
    }

    .selected {
        background-color: blue; /* Change la couleur de fond en bleu */
        color: white; /* Change la couleur du texte en blanc, pour une meilleure lisibilité */
    }
</style>